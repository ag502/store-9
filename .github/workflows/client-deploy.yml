name: CI/CD-client

on:
  push:
    branches: [master]

env:
  DOCKER_IMAGE: ghcr.io/woowa-techcamp-2021/store-9
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CLIENT_CICD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./client/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, label-client]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CLIENT_CICD }}
      - name: Docker run
        run: |
          docker ps -a -q --filter "name=store-client" | grep -q . && docker stop store-client && docker rm -fv store-client 
          docker run -d -p 80:8080 --name store-client --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
